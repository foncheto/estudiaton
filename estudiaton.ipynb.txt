{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pregunta 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "pokemons = [\n",
    "    [\"Nombre,Peso,Altura,tipo,Evolucion \"],\n",
    "    [\"a\",\"b\",\"c\",\"d\",\"e\"] \n",
    "]\n",
    "\n",
    "file = open(\"pokemons.csv\",\"w\" )\n",
    "file.write(pokemons[0][0])\n",
    "file.write(\"\\n\")\n",
    "\n",
    "for pokemon in pokemons[1:]:\n",
    "\n",
    "    for field in range(5):\n",
    "        file.write(pokemon[field])\n",
    "        \n",
    "        if field != 4:\n",
    "            file.write(\",\")\n",
    "        else:\n",
    "            file.write(\"\\n\")\n",
    "\n",
    "file.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def buscar_pokemon(archivo, nombre=None, tipo=None):\n",
    "    encontrado = False\n",
    "    file = open(archivo)\n",
    "    if tipo == None:\n",
    "        for line in file:\n",
    "            pokemon = line.split(\",\")\n",
    "            if pokemon[0] == nombre:\n",
    "                print(line)\n",
    "                encontrado = True\n",
    "    elif tipo == None:\n",
    "        for line in file:\n",
    "            pokemon = line.split(\",\")\n",
    "            if tipo in pokemon[3]:\n",
    "                print(line)\n",
    "                encontrado = True\n",
    "    else:\n",
    "        for line in file:\n",
    "            pokemon = line.split(\",\")\n",
    "            if pokemon[0] == nombre or tipo in pokemon[3]:\n",
    "                print(line)\n",
    "                encontrado = True\n",
    "\n",
    "\n",
    "    if not encontrado:\n",
    "        print(\"No Encontrado\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a,b,c,d,e\n",
      "\n"
     ]
    }
   ],
   "source": [
    "buscar_pokemon(\"pokemons.csv\", \"a\",\"b\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def main():\n",
    "    while True:\n",
    "        tipo = input()\n",
    "        nombre = input()\n",
    "        buscar_pokemon(\"pokemons.csv\", nombre, tipo)\n",
    "        seguir = input()\n",
    "        if seguir == \"no\":\n",
    "            return"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pregunta 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def crear_tablero():\n",
    "    tipo = input()\n",
    "    if tipo == 1:\n",
    "        tablero = np.array((5,5))\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
